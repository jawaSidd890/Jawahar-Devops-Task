A Deployment in Kubernetes is a higher-level abstraction that helps you manage and control Pods (the smallest unit in Kubernetes). Instead of manually creating and updating Pods, you use a Deployment to define how many replicas of your application should run, and Kubernetes ensures that the desired state matches the actual state.

ðŸ”¹ Key Features of a Deployment

Declarative Updates â€“ You describe the desired state in a YAML/JSON file, and Kubernetes makes it happen.

Replica Management â€“ Ensures the specified number of Pods are running.

Rolling Updates â€“ Updates Pods gradually without downtime.

Rollback â€“ You can revert to a previous version if something goes wrong.

Self-Healing â€“ If a Pod crashes, the Deployment automatically replaces it.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - name: nginx-container
          image: nginx:latest
          ports:
            - containerPort: 80
